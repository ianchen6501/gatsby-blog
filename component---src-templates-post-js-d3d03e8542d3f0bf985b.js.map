{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/templates/post.js"],"names":["Container","styled","Title","TopButton","Post","post","data","markdownRemark","useState","show","setShow","useEffect","window","onscroll","scrollY","frontmatter","title","dangerouslySetInnerHTML","__html","html","onClick","scrollTo","top","behavior"],"mappings":"4NAcMA,G,QAAYC,oBAAH,2DAAGA,CAAH,iGASTC,EAAQD,mBAAH,uDAAGA,CAAH,sBAILE,EAAYF,uBAAH,2DAAGA,CAAH,2LAkBA,SAASG,EAAT,GAAyB,IAChCC,EAD+B,EAARC,KACXC,eAClB,GAAwBC,eAAS,GAA1BC,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,gBAAU,WACRC,OAAOC,SAAW,WACZD,OAAOE,QAAU,IACnBJ,GAAQ,GAERA,GAAQ,OAaZ,gBAAC,IAAD,KACE,gBAACV,EAAD,KACE,gBAACE,EAAD,KAAQG,EAAKU,YAAYC,OACzB,uBAAKC,wBAAyB,CAAEC,OAAQb,EAAKc,QAC5CV,GAAQ,gBAACN,EAAD,CAAWiB,QAAS,WAXjCR,OAAOS,SAAS,CACdC,IAAK,EACLC,SAAU,aASC","file":"component---src-templates-post-js-d3d03e8542d3f0bf985b.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\nimport Layout from \"../components/layout\"\r\nimport Link from \"gatsby-link\"\r\n\r\n// const NavLink = props => {\r\n//   if (!props.test) {\r\n//     return <Link to={props.url}>{props.text}</Link>\r\n//   } else {\r\n//     return <span>{props.text}</span>\r\n//   }\r\n// }\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: block;\r\n  width: 70%;\r\n  border: solid 0px;\r\n  margin: 0 auto;\r\n  padding-top: 50px;\r\n`\r\n\r\nconst Title = styled.h3`\r\n  margin: 30px 0px;\r\n`\r\n\r\nconst TopButton = styled.button`\r\n  position: fixed;\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  right: 30px;\r\n  bottom: 30px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  text-align: center;\r\n  font-size: 10px;\r\n  outline: none;\r\n\r\n  &:active {\r\n    border: none;\r\n  }\r\n`\r\n\r\nexport default function Post({ data }) {\r\n  const post = data.markdownRemark\r\n  const [show, setShow] = useState(false)\r\n\r\n  useEffect(() => {\r\n    window.onscroll = () => {\r\n      if (window.scrollY > 500) {\r\n        setShow(true)\r\n      } else {\r\n        setShow(false)\r\n      }\r\n    }\r\n  })\r\n\r\n  function goTop() {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Title>{post.frontmatter.title}</Title>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        {show && <TopButton onClick={() => goTop()}>Top</TopButton>}\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}