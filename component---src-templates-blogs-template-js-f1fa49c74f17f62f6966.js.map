{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/templates/blogs_template.js"],"names":["Wrapper","styled","PostContainer","PostTitle","P","PostDate","PaginatorContainer","PaginatorLink","prop","$disalbe","FilterContainer","Filter","FilterLink","NavLink","props","test","text","href","url","pageContext","location","group","index","first","last","pageCount","pathName","pathname","pagesArray","filtersMap","all","algorythm","notes","implementation","thinkings","pathNameArray","split","filter","element","Number","length","pop","join","baseUrlArray","JSON","parse","stringify","baseUrl","console","log","previousUrl","nextUrl","i","push","Object","keys","map","node","key","fields","slug","to","frontmatter","title","date","excerpt","pageNumber","toString"],"mappings":"wMAMMA,EAAUC,oBAAH,mEAAGA,CAAH,sGASPC,EAAgBD,oBAAH,yEAAGA,CAAH,0JAabE,EAAYF,mBAAH,qEAAGA,CAAH,wBAITG,EAAIH,kBAAH,6DAAGA,CAAH,gEAKDI,EAAWJ,mBAAH,oEAAGA,CAAH,8BAKRK,EAAqBL,oBAAH,8EAAGA,CAAH,iEAOlBM,EAAgBN,oBAAH,yEAAGA,CAAH,mEAKf,SAAAO,GAAI,OAAIA,EAAKC,UAAL,oBAGNC,EAAkBT,oBAAH,2EAAGA,CAAH,MAEfU,EAASV,qBAAH,kEAAGA,CAAH,oEAQNW,EAAaX,kBAAH,sEAAGA,CAAH,0DAUVY,EAAU,SAAAC,GACd,OAAKA,EAAMC,KAOF,gBAACR,EAAD,CAAeE,UAAU,GAAOK,EAAME,MAL3C,qBAAGC,KAAMH,EAAMI,KACb,gBAACX,EAAD,CAAeE,UAAU,GAAQK,EAAME,QAwF/C,UAhFkB,SAAC,GAA+B,IAA7BG,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACxBC,EAAyCF,EAAzCE,MAAOC,EAAkCH,EAAlCG,MAAOC,EAA2BJ,EAA3BI,MAAOC,EAAoBL,EAApBK,KAAMC,EAAcN,EAAdM,UAC/BC,EAAWN,EAASO,SAClBC,EAAa,GACbC,EAAa,CACjBC,IAAK,KACLC,UAAW,MACXC,MAAO,KACPC,eAAgB,KAChBC,UAAW,MAGTC,EAAgBT,EAASU,MAAM,KACnCD,EAAgBA,EAAcE,QAAO,SAAAC,GACnC,GAAgB,KAAZA,EACF,OAAOA,KAIPC,OAAOJ,EAAcA,EAAcK,OAAS,MAC9CL,EAAcM,MACdf,EAAQ,IAAOS,EAAcO,KAAK,MAGpC,IAAIC,EAAeC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7CQ,EAAaF,MACb,IAAMM,EAAO,IAAOJ,EAAaD,KAAK,KAEtCM,QAAQC,IAAIF,GACZC,QAAQC,IAAIvB,GAKZ,IAJA,IAAMwB,EACJ5B,EAAQ,GAAM,EAAd,GAAqBI,EAAgBA,EAArC,KAAiDJ,EAAQ,GACrD6B,EAAazB,EAAN,KAAkBJ,EAAQ,GAE9B8B,EAAI,EAAGA,GAAK3B,EAAW2B,IAC9BxB,EAAWyB,KAAKD,GAGlB,OACE,gBAAC,IAAD,KACE,gBAACpD,EAAD,KACE,gBAACU,EAAD,KACG4C,OAAOC,KAAK1B,GAAY2B,KAAI,SAAAnB,GAAM,OACjC,gBAAC1B,EAAD,KACE,gBAACC,EAAD,CAAYK,KAAS8B,EAAL,IAAgBV,GAC7BR,EAAWQ,SAKnBhB,EAAMmC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,gBAACvD,EAAD,CAAewD,IAAKD,EAAKE,OAAOC,MAC9B,2BACE,gBAAC,KAAD,CAAMC,GAAIJ,EAAKE,OAAOC,MACpB,gBAACzD,EAAD,KAAYsD,EAAKK,YAAYC,QAE/B,gBAAC1D,EAAD,KAAWoD,EAAKK,YAAYE,OAE9B,gBAAC5D,EAAD,KAAIqD,EAAKQ,aAGb,gBAAC3D,EAAD,KACE,gBAACO,EAAD,CAASE,KAAMQ,EAAOL,IAAKgC,EAAalC,KAAK,SAC5CY,EAAW4B,KAAI,SAAAU,GACd,OACE,gBAACrD,EAAD,CACEE,KAAMmD,IAAe5C,EACrBN,KAAMkD,EAAWC,WACjBjD,IACiB,IAAfgD,EAAA,GAAsBxC,EAAgBA,EAAtC,IAAkDwC,OAK1D,gBAACrD,EAAD,CAASE,KAAMS,EAAMN,IAAKiC,EAASnC,KAAK","file":"component---src-templates-blogs-template-js-f1fa49c74f17f62f6966.js","sourcesContent":["import { graphql } from \"gatsby\"\r\nimport React from \"react\"\r\nimport Link from \"gatsby-link\"\r\nimport styled from \"styled-components\"\r\nimport Layout from \"../components/layout\"\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  min-height: 100%;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  padding-top: 100px;\r\n  padding-bottom: 60px;\r\n`\r\n\r\nconst PostContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0px;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  background-color: gainsboro;\r\n\r\n  &:last-child {\r\n    margin-bottom: 30px;\r\n  }\r\n`\r\n\r\nconst PostTitle = styled.h4`\r\n  margin-right: 20px;\r\n`\r\n\r\nconst P = styled.p`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`\r\nconst PostDate = styled.h5`\r\n  float: right;\r\n  color: white;\r\n`\r\n\r\nconst PaginatorContainer = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 30px;\r\n  text-align: center;\r\n`\r\n\r\nconst PaginatorLink = styled.div`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  padding: 0 10px 0 10px;\r\n\r\n  ${prop => prop.$disalbe && `color: #aaaaaa`}\r\n`\r\n\r\nconst FilterContainer = styled.div``\r\n\r\nconst Filter = styled.span`\r\n  margin-right: 20px;\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n  cursor: pointer;\r\n`\r\n\r\nconst FilterLink = styled.a`\r\n  color: black;\r\n  &:active,\r\n  &:hover,\r\n  &:visited {\r\n    color: black;\r\n  }\r\n`\r\n\r\n// pagination nav\r\nconst NavLink = props => {\r\n  if (!props.test) {\r\n    return (\r\n      <a href={props.url}>\r\n        <PaginatorLink $disalbe={false}>{props.text}</PaginatorLink>\r\n      </a>\r\n    )\r\n  } else {\r\n    return <PaginatorLink $disalbe={true}>{props.text}</PaginatorLink>\r\n  }\r\n}\r\n\r\nconst blogsPage = ({ pageContext, location }) => {\r\n  const { group, index, first, last, pageCount } = pageContext\r\n  let pathName = location.pathname\r\n  const pagesArray = []\r\n  const filtersMap = {\r\n    all: \"全部\",\r\n    algorythm: \"演算法\",\r\n    notes: \"筆記\",\r\n    implementation: \"實作\",\r\n    thinkings: \"心得\",\r\n  }\r\n\r\n  let pathNameArray = pathName.split(\"/\")\r\n  pathNameArray = pathNameArray.filter(element => {\r\n    if (element !== \"\") {\r\n      return element\r\n    }\r\n  })\r\n\r\n  if (Number(pathNameArray[pathNameArray.length - 1])) {\r\n    pathNameArray.pop()\r\n    pathName = `/${pathNameArray.join(\"/\")}`\r\n  }\r\n\r\n  let baseUrlArray = JSON.parse(JSON.stringify(pathNameArray))\r\n  baseUrlArray.pop()\r\n  const baseUrl = `/${baseUrlArray.join(\"/\")}`\r\n\r\n  console.log(baseUrl)\r\n  console.log(pathName)\r\n  const previousUrl =\r\n    index - 1 === 1 ? `${pathName}` : `${pathName}/${index - 1}`\r\n  const nextUrl = `${pathName}/${index + 1}`\r\n\r\n  for (let i = 1; i <= pageCount; i++) {\r\n    pagesArray.push(i)\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        <FilterContainer>\r\n          {Object.keys(filtersMap).map(filter => (\r\n            <Filter>\r\n              <FilterLink href={`${baseUrl}/${filter}`}>\r\n                {filtersMap[filter]}\r\n              </FilterLink>\r\n            </Filter>\r\n          ))}\r\n        </FilterContainer>\r\n        {group.map(({ node }) => (\r\n          <PostContainer key={node.fields.slug}>\r\n            <div>\r\n              <Link to={node.fields.slug}>\r\n                <PostTitle>{node.frontmatter.title}</PostTitle>\r\n              </Link>\r\n              <PostDate>{node.frontmatter.date}</PostDate>\r\n            </div>\r\n            <P>{node.excerpt}</P>\r\n          </PostContainer>\r\n        ))}\r\n        <PaginatorContainer>\r\n          <NavLink test={first} url={previousUrl} text=\"PREV\" />\r\n          {pagesArray.map(pageNumber => {\r\n            return (\r\n              <NavLink\r\n                test={pageNumber === index ? true : false}\r\n                text={pageNumber.toString()}\r\n                url={\r\n                  pageNumber === 1 ? `${pathName}` : `${pathName}/${pageNumber}`\r\n                }\r\n              />\r\n            )\r\n          })}\r\n          <NavLink test={last} url={nextUrl} text=\"NEXT\" />\r\n        </PaginatorContainer>\r\n      </Wrapper>\r\n    </Layout>\r\n  )\r\n}\r\nexport default blogsPage\r\n"],"sourceRoot":""}