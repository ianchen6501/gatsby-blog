{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/templates/blogs_template.js"],"names":["Wrapper","styled","PostContainer","PostTitle","P","PostDate","PaginatorContainer","PaginatorLink","prop","$disalbe","NavLink","props","test","text","to","url","pageContext","group","index","first","last","previousUrl","toString","nextUrl","map","node","key","fields","slug","frontmatter","title","date","excerpt"],"mappings":"gMAKMA,EAAUC,oBAAH,mEAAGA,CAAH,2FAQPC,EAAgBD,oBAAH,yEAAGA,CAAH,yCAKbE,EAAYF,mBAAH,qEAAGA,CAAH,wBAITG,EAAIH,kBAAH,6DAAGA,CAAH,gEAKDI,EAAWJ,mBAAH,oEAAGA,CAAH,6BAKRK,EAAqBL,oBAAH,8EAAGA,CAAH,gEAOlBM,EAAgBN,oBAAH,yEAAGA,CAAH,6CAIf,SAAAO,GAAI,OAAIA,EAAKC,UAAL,oBAINC,EAAU,SAAAC,GACd,OAAKA,EAAMC,KAOF,gBAACL,EAAD,CAAeE,UAAU,GAAOE,EAAME,MAL3C,gBAAC,KAAD,CAAMC,GAAIH,EAAMI,KACd,gBAACR,EAAD,CAAeE,UAAU,GAAQE,EAAME,QAmC/C,UA3BkB,SAAC,GAAqB,IAAnBG,EAAkB,EAAlBA,YACXC,EAA8BD,EAA9BC,MAAOC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,KACvBC,EAAcH,EAAQ,GAAM,EAAI,cAAgBA,EAAQ,GAAGI,WAC3DC,GAAWL,EAAQ,GAAGI,WAE5B,OACE,gBAAC,IAAD,KACE,gBAACtB,EAAD,KACGiB,EAAMO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,EAASP,MAAT,OACT,gBAAChB,EAAD,CAAewB,IAAKD,EAAKE,OAAOC,MAC9B,2BACE,gBAAC,KAAD,CAAMd,GAAIW,EAAKE,OAAOC,MACpB,gBAACzB,EAAD,KAAYsB,EAAKI,YAAYC,QAE/B,gBAACzB,EAAD,KAAWoB,EAAKI,YAAYE,OAE9B,gBAAC3B,EAAD,KAAIqB,EAAKO,aAGb,gBAAC1B,EAAD,KACE,gBAACI,EAAD,CAASE,KAAMO,EAAOJ,IAAKM,EAAaR,KAAK,SAC7C,gBAACH,EAAD,CAASE,KAAMQ,EAAML,IAAKQ,EAASV,KAAK","file":"component---src-templates-blogs-template-js-832e3e0ae6a2473d96c7.js","sourcesContent":["import React from \"react\"\r\nimport Link from \"gatsby-link\"\r\nimport styled from \"styled-components\"\r\nimport Layout from \"../components/layout\"\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  height: calc(100% - 30px);\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  padding-top: 100px;\r\n`\r\n\r\nconst PostContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst PostTitle = styled.h4`\r\n  margin-right: 20px;\r\n`\r\n\r\nconst P = styled.p`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`\r\nconst PostDate = styled.h5`\r\n  float: right;\r\n  color: gray;\r\n`\r\n\r\nconst PaginatorContainer = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0px;\r\n  text-align: center;\r\n`\r\n\r\nconst PaginatorLink = styled.div`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n\r\n  ${prop => prop.$disalbe && `color: #aaaaaa`}\r\n`\r\n\r\n// pagination nav\r\nconst NavLink = props => {\r\n  if (!props.test) {\r\n    return (\r\n      <Link to={props.url}>\r\n        <PaginatorLink $disalbe={false}>{props.text}</PaginatorLink>\r\n      </Link>\r\n    )\r\n  } else {\r\n    return <PaginatorLink $disalbe={true}>{props.text}</PaginatorLink>\r\n  }\r\n}\r\n\r\nconst blogsPage = ({ pageContext }) => {\r\n  const { group, index, first, last } = pageContext\r\n  const previousUrl = index - 1 === 1 ? \"/blog-list\" : (index - 1).toString()\r\n  const nextUrl = (index + 1).toString()\r\n\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        {group.map(({ node, index }) => (\r\n          <PostContainer key={node.fields.slug}>\r\n            <div>\r\n              <Link to={node.fields.slug}>\r\n                <PostTitle>{node.frontmatter.title}</PostTitle>\r\n              </Link>\r\n              <PostDate>{node.frontmatter.date}</PostDate>\r\n            </div>\r\n            <P>{node.excerpt}</P>\r\n          </PostContainer>\r\n        ))}\r\n        <PaginatorContainer>\r\n          <NavLink test={first} url={previousUrl} text=\"PREV\" />\r\n          <NavLink test={last} url={nextUrl} text=\"NEXT\" />\r\n        </PaginatorContainer>\r\n      </Wrapper>\r\n    </Layout>\r\n  )\r\n}\r\nexport default blogsPage\r\n"],"sourceRoot":""}