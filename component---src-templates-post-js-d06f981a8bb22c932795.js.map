{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/templates/post.js"],"names":["Container","styled","Title","TopButton","Post","post","data","markdownRemark","useState","show","setShow","useEffect","window","onscroll","console","log","scrollY","frontmatter","title","dangerouslySetInnerHTML","__html","html","onClick","scrollTo","top","behavior"],"mappings":"4NAcMA,G,QAAYC,oBAAH,2DAAGA,CAAH,iGASTC,EAAQD,mBAAH,uDAAGA,CAAH,sBAILE,EAAYF,uBAAH,2DAAGA,CAAH,2LAmBA,SAASG,EAAT,GAAuB,IAC/BC,EAD8B,EAAPC,KACXC,eAClB,GAAwBC,eAAS,GAA1BC,EAAP,KAAaC,EAAb,KAoBC,OAlBDC,gBAAU,WACTC,OAAOC,SAAW,WACjBC,QAAQC,IAAIH,OAAOI,SAChBJ,OAAOI,QAAU,IACnBN,GAAQ,GAERA,GAAQ,OAaV,gBAAC,IAAD,KACI,gBAACV,EAAD,KACE,gBAACE,EAAD,KAAQG,EAAKY,YAAYC,OACzB,uBAAKC,wBAAyB,CAAEC,OAAQf,EAAKgB,QAChDZ,GAAQ,gBAACN,EAAD,CAAWmB,QAAS,WAX/BV,OAAOW,SAAS,CACfC,IAAK,EACLC,SAAU,aASA","file":"component---src-templates-post-js-d06f981a8bb22c932795.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\nimport Layout from \"../components/layout\"\r\nimport Link from 'gatsby-link'\r\n\r\n// const NavLink = props => {\r\n//   if (!props.test) {\r\n//     return <Link to={props.url}>{props.text}</Link>\r\n//   } else {\r\n//     return <span>{props.text}</span>\r\n//   }\r\n// }\r\n\r\nconst Container = styled.div `\r\n\tposition: relative;\r\n\tdisplay: block;\r\n\twidth: 70%;\r\n\tborder: solid 0px;\r\n\tmargin: 0 auto;\r\n\tpadding-top: 50px;\r\n`\r\n\r\nconst Title = styled.h3 `\r\n\tmargin: 30px 0px;\r\n`\r\n\r\nconst TopButton = styled.button `\r\n\tposition: fixed;\r\n\tdisplay: inline-block;\r\n\twidth: 50px;\r\n\theight: 50px;\r\n\tright: 30px;\r\n\tbottom: 30px;\r\n\tborder-radius: 50px;\r\n\tborder: none;\r\n\ttext-align: center;\r\n\tfont-size:10px;\r\n\toutline: none;\r\n\r\n\t&:active {\r\n\t\tborder: none;\r\n\t}\r\n`\r\n\r\n\r\nexport default function Post({data}) {\r\n\tconst post = data.markdownRemark\r\n\tconst [show, setShow] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.onscroll = () => {\r\n\t\t\tconsole.log(window.scrollY)\r\n\t\t\tif(window.scrollY > 500) {\r\n\t\t\t\tsetShow(true)\r\n\t\t\t} else {\r\n\t\t\t\tsetShow(false)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tfunction goTop() {\r\n\t\twindow.scrollTo({\r\n\t\t\ttop: 0,\r\n\t\t\tbehavior: \"smooth\"\r\n\t\t})\r\n\t}\r\n\r\n  return (\r\n\t\t<Layout>\r\n      <Container>\r\n        <Title>{post.frontmatter.title}</Title>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n\t\t\t\t{show && <TopButton onClick={() => goTop()}>Top</TopButton>}\r\n      </Container>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport const query = graphql`\r\n\tquery($slug: String!) {\r\n\t\tmarkdownRemark(fields: { slug: { eq: $slug } }) {\r\n\t\t\thtml\r\n\t\t\tfrontmatter {\r\n\t\t\t\ttitle\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`"],"sourceRoot":""}